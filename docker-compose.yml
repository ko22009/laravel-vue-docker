version: "3.8"

services:
  certbot:
    image: certbot/certbot
    container_name: ${APP_NAME}-certbot
    volumes:
      - ./docker/certbot/www:/var/www/certbot/:rw
      - ./docker/certbot/conf/:/etc/letsencrypt/:rw
    depends_on:
      - frontend_nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - laravel

  frontend_nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}-frontend_nginx
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./frontend/dist:/var/www/html/:ro
      - ./docker/frontend/nginx:/etc/nginx/conf.d/:ro
      - ./docker/certbot/www:/var/www/certbot/:ro
      - ./docker/certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      - laravel

  frontend:
    build: ./docker/frontend
    container_name: ${APP_NAME}-frontend
    restart: unless-stopped
    tty: true
    volumes:
      - ./frontend:/var/www/html/:rw
    networks:
      - laravel

  backend_nginx:
    image: nginx:alpine
    restart: unless-stopped
    container_name: ${APP_NAME}-backend_nginx
    tty: true
    ports:
      - 8000:8000
    depends_on:
      - backend
    volumes:
      - ./backend:/var/www/html/:ro
      - ./docker/backend/nginx:/etc/nginx/conf.d/:ro
    networks:
      - laravel

  backend:
    build: ./docker/backend
    restart: unless-stopped
    container_name: ${APP_NAME}-backend
    tty: true
    ports:
      - 9000
    volumes:
      - ./backend:/var/www/html/:rw
      - ./docker/backend/php.ini:/usr/local/etc/php/conf.d/php.ini/:rw
    networks:
      - laravel

  mysql:
    image: mariadb:10.6
    restart: unless-stopped
    tty: true
    container_name: ${APP_NAME}-mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - 3306
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: ${APP_NAME}-redis
    volumes:
      - ./docker/redis/data:/data
    ports:
      - 6379
    networks:
      - laravel

networks:
  laravel:
